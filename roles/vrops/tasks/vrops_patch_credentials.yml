---

- name: Patching - Get All Credentials
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials
    method: GET
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 200
    return_content: yes
  register: patching_pre_existing_credentials
  no_log: "{{ enable_no_log }}"
  tags:
    - vrops_patch_credentials

- name: Patching - Filter out protected credential instances from future tasks
  determine_watchlisted_credential_instances:
    credential_instances: "{{ patching_pre_existing_credentials.json.credentialInstances }}"
    credential_watchlist: "{{ credential_watchlist }}"
  no_log: "{{ enable_no_log }}"
  register: watchlisted_credentials
  tags:
    - vrops_patch_credentials

- name: Patching - Prepare List of Credentials to be Purged & Updated
  patching_get_credentials_list:
    credentials_list: "{{ credentials }}"
    vrops_credential_instances_purgeable: "{{ watchlisted_credentials.purgeable_credentials }}"
    vrops_credential_instances_updateable: "{{ watchlisted_credentials.updateable_credentials }}"
  register: patching_credentials_list
  no_log: "{{ enable_no_log }}"
  tags:
    - vrops_patch_credentials

- name: Patching - Purge (delete) Targeted Credentials (will not delete credentials with dependents)
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials/{{ item.id }}
    method: DELETE
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 204,404,500
    return_content: yes
  register: patching_credential_delete_results
  with_items: "{{ patching_credentials_list.deletable }}"
  no_log: "{{ enable_no_log }}"
  tags:
    - vrops_patch_credentials

- name: Patching - Update Targeted vSphere Credentials
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials
    body: "{{ lookup('template', 'update-vc-credential.json') }}"
    body_format: json
    method: PUT
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 200, 404
    return_content: yes
  register: vc_credential_update_results
  with_items: "{{ patching_credentials_list.updateable }}"
  no_log: "{{ enable_no_log }}"
  when: item.type == 'vc'
  tags:
    - vrops_patch_credentials

- name: Patching - Update Targeted RemediationVcenterCredential Credentials
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials
    body: "{{ lookup('template', 'update-pythonvc-credential.json') }}"
    body_format: json
    method: PUT
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 200, 404
    return_content: yes
  register: pythonvc_credential_update_results
  with_items: "{{ patching_credentials_list.updateable }}"
  no_log: "{{ enable_no_log }}"
  when: item.type == 'pythonvc'
  tags:
    - vrops_patch_credentials

- name: Patching - Update Targeted vRA Credentials
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials
    body: "{{ lookup('template', 'update-vra-credential.json') }}"
    body_format: json
    method: PUT
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 200, 404
    return_content: yes
  register: vra_credential_update_results
  with_items: "{{ patching_credentials_list.updateable }}"
  no_log: "{{ enable_no_log }}"
  when: item.type == 'vra'
  tags:
    - vrops_patch_credentials

- name: Patching - Update Targeted HPE OneView Credentials
  uri:
    url: https://{{ vrops_nodes.master.ip_address }}/suite-api/api/credentials
    body: "{{ lookup('template', 'update-hpov-credential.json') }}"
    body_format: json
    method: PUT
    user: "{{ default_admin_user }}"
    password: "{{ svc_vrops_admin_password }}"
    force_basic_auth: yes
    headers:
      Content-Type: "application/json;charset=UTF-8"
      Accept: "application/json;charset=UTF-8"
    validate_certs: no
    timeout: 3600
    status_code: 200, 404
    return_content: yes
  register: hpov_credential_update_results
  with_items: "{{ patching_credentials_list.updateable }}"
  no_log: "{{ enable_no_log }}"
  when: item.type == 'hpeoneview'
  tags:
    - vrops_patch_credentials
